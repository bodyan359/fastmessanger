{"version":3,"sources":["components/Header.jsx","firebase.js","components/RoomMenu.jsx","components/Chat.jsx","components/Message.jsx","api/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","forwardRef","ref","username","className","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","RoomMenu","roomNames","setRoomID","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","classes","Drawer","variant","paper","anchor","Divider","List","ListItem","button","onClick","event","text","prompt","collection","add","id","name","ListItemText","primary","map","Chat","Message","message","isUser","timestamp","Card","CardContent","Typography","color","component","data","fetchWeather","city","a","endpoint","fetch","json","App","useState","input","setInput","messages","setMessages","setUsername","setRoomNames","roomID","useEffect","doc","orderBy","onSnapshot","snapshot","docs","CssBaseline","AppBar","position","Toolbar","noWrap","FormControl","InputLabel","Input","placeholder","value","onChange","target","IconButton","disabled","type","preventDefault","FieldValue","serverTimestamp","inputArray","split","toLowerCase","then","console","log","undefined","setTimeout","location","current","temp_c","localtime","condition","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.159f53f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = React.forwardRef(({ username }, ref) => {\r\n  return (\r\n    <div ref={ref} className=\"Header\">\r\n      {/* <img alt=\"logo\" src=\"https://web.telegram.org/img/logo_share.png\" /> */}\r\n      <h2 className=\"welcome-text\"> Welcome {username || \"Anonymous\"}</h2>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\nimport '@firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCvZgIQfxZ71UTpTi2fSqBBWAY5q6J_Bp4\",\r\n    authDomain: \"fastmessanger-bodyan359.firebaseapp.com\",\r\n    projectId: \"fastmessanger-bodyan359\",\r\n    storageBucket: \"fastmessanger-bodyan359.appspot.com\",\r\n    messagingSenderId: \"436591331981\",\r\n    appId: \"1:436591331981:web:7d5d427ee13863423770c4\"\r\n  });\r\n\r\nlet db = firebaseConfig.firestore();\r\n\r\n// //initiating references to the databases\r\n// const usersRef = db.collection('users');\r\n\r\n// // for privileges purposes\r\n// const functions = firebase.functions();\r\n\r\n// //google provider sign-in\r\n// const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport default db;","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport db from \"../firebase\";\r\n\r\nconst RoomMenu = React.forwardRef(({ roomNames, username, setRoomID }, ref) => {\r\n  const drawerWidth = 240;\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n  const createRoom = (event) => {\r\n    let text = prompt(\"Please enter room name:\", \"PJATK Students\");\r\n\r\n    db.collection(\"rooms\").add({\r\n      id: username,\r\n      name: text,\r\n    });\r\n  };\r\n\r\n  const openRoom = (_roomID) => {\r\n    setRoomID(_roomID);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      ref={ref}\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      anchor=\"left\"\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n\r\n      <List>\r\n        <ListItem button onClick={createRoom}>\r\n          <ListItemText primary=\"Create new room\" />\r\n          <AddIcon />\r\n        </ListItem>\r\n        <Divider />\r\n        {roomNames.map(({ id, name }) => (\r\n          <ListItem button key={id} onClick={() => openRoom(id)}>\r\n            <ListItemText primary={name.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n});\r\n\r\nexport default RoomMenu;\r\n","import React from \"react\";\r\n\r\nfunction Chat() {\r\n  return <div>2</div>;\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./Message.css\";\r\n\r\nconst Message = React.forwardRef(({ username, message }, ref) => {\r\n  const isUser = username === message.username;\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={\r\n        message.timestamp + ` message ${isUser ? \"message__user\" : \"\"}`\r\n      }\r\n    >\r\n      <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n        <CardContent>\r\n          <Typography color=\"textPrimary\" variant=\"h5\" component=\"h2\">\r\n            {!isUser && `${message.username || \"Anonymous\"}: `} {message.data}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Message;\r\n","export const fetchWeather = async (city) => {\r\n  const endpoint = `http://api.weatherapi.com/v1/current.json?key=98d10412378d474f8a2200129211808%20&q=${city}&aqi=no`;\r\n  const data = await (await fetch(endpoint)).json();\r\n\r\n  return data;\r\n};\r\n\r\n/// degress in C  data.current.temp_c\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport { Message, Header, RoomMenu } from \"./components\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FormControl, InputLabel, Input, IconButton } from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { fetchWeather } from \"./api/Weather\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction App() {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [messages, setMessages] = React.useState([]);\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [roomNames, setRoomNames] = React.useState([]);\r\n  const [roomID, setRoomID] = React.useState(\"PjBDnTCDD1IlMLgQsXh6\");\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"rooms\")\r\n      .doc(roomID)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, message: doc.data() }))\r\n        );\r\n      });\r\n  }, [roomID]);\r\n\r\n  React.useEffect(() => {\r\n    db.collection(\"rooms\").onSnapshot((snapshot) => {\r\n      setRoomNames(\r\n        snapshot.docs.map((doc) => ({ id: doc.id, name: doc.data() }))\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  const drawerWidth = 240;\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.default,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    setUsername(prompt(\"Enter your nickname\"));\r\n  }, []);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault(); //dont refresh page on clicking 'enter'\r\n\r\n    db.collection(\"rooms\").doc(roomID).collection(\"messages\").add({\r\n      data: input,\r\n      username: username,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    let inputArray = input.split(\" \", 2);\r\n    if (inputArray[0].toLowerCase() === \"weather\") {\r\n      fetchWeather(inputArray[1]).then((data) => {\r\n        console.log(data);\r\n        data !== undefined &&\r\n          setTimeout(\r\n            db\r\n              .collection(\"rooms\")\r\n              .doc(roomID)\r\n              .collection(\"messages\")\r\n              .add({\r\n                data: `Weather in ${data?.location?.name} is ${data?.current?.temp_c}°.Local time: ${data?.location?.localtime}. Condition: ${data?.current?.condition?.text}.`,\r\n                username: \"Weather Bot\",\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              }),\r\n            2220\r\n          );\r\n      });\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar className=\"Header\">\r\n          <Typography variant=\"h6\" noWrap>\r\n            FastMessenger\r\n          </Typography>\r\n          <Header username={username} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"Menu\">\r\n        <RoomMenu\r\n          roomNames={roomNames}\r\n          username={username}\r\n          setRoomID={setRoomID}\r\n        />\r\n      </div>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <FlipMove className=\"messageStyle\">\r\n          {messages.map(({ id, message }) => (\r\n            <Message\r\n              className={id}\r\n              key={id}\r\n              username={username}\r\n              message={message}\r\n            />\r\n          ))}\r\n        </FlipMove>\r\n        <form className=\"app__form container\">\r\n          <FormControl className=\"app__formControl\">\r\n            <InputLabel>Enter a message...</InputLabel>\r\n            <Input\r\n              className=\"app__input\"\r\n              placeholder=\"Enter a message\"\r\n              value={input}\r\n              onChange={(event) => setInput(event.target.value)}\r\n            />\r\n            <IconButton\r\n              className=\"app__iconButton\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={!input}\r\n              type=\"submit\"\r\n              onClick={sendMessage}\r\n            >\r\n              <SendIcon />\r\n            </IconButton>\r\n          </FormControl>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}