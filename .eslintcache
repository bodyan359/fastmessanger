[{"C:\\Dev\\fastmessanger\\src\\reportWebVitals.js":"1","C:\\Dev\\fastmessanger\\src\\App.js":"2","C:\\Dev\\fastmessanger\\src\\Message.js":"3","C:\\Dev\\fastmessanger\\src\\firebase.js":"4","C:\\Dev\\fastmessanger\\src\\index.js":"5"},{"size":362,"mtime":1611763093423,"results":"6","hashOfConfig":"7"},{"size":2222,"mtime":1611790696309,"results":"8","hashOfConfig":"7"},{"size":773,"mtime":1611790252691,"results":"9","hashOfConfig":"7"},{"size":767,"mtime":1611784420315,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1611763093423,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nqxrp5",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Dev\\fastmessanger\\src\\reportWebVitals.js",[],"C:\\Dev\\fastmessanger\\src\\App.js",["25","26","27"],"import React from 'react';\n\nimport './App.css';\nimport Message from './Message';\n\nimport { Button, FormControl, InputLabel, Input, IconButton} from '@material-ui/core';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport Icon from '@material-ui/core/Icon';\n\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction App() {\n  const [input, setInput] = React.useState('');\n  const [messages, setMessages] = React.useState([]);\n  const [username, setUsername] = React.useState('');\n\n  // console.log('input',input);\n  // console.log('messages',messages);\n\n  //adding to db\n  React.useEffect(() => {\n    // run once when the app component loads\n    db.collection('messages').orderBy('timestamp', 'desc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})));\n    });\n  }, []);\n\n  React.useEffect(() => {\n    setUsername(prompt('Enter your nickname'));\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault(); //dont refresh page on clicking 'enter'\n\n    db.collection('messages').add({\n      data: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    // setMessages([...messages, {username: username, text: input}]);\n    setInput('');\n  };\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://web.telegram.org/img/logo_share.png\" />\n        <h1>FastMessenger</h1>\n        <h2>Welcome {username}</h2>\n        <FlipMove>\n          {messages.map(({id,message}) => (\n            <Message key={id} username={username} message={message}/>\n          ))}\n        </FlipMove>\n        <form className=\"app__form\">\n          <FormControl className=\"app__formControl\">\n            <InputLabel >Enter a message...</InputLabel>\n            <Input className=\"app__input\" placeholder='Enter a message' value={input} onChange={event => setInput(event.target.value)} />\n            <IconButton className=\"app__iconButton\" variant=\"contained\" color=\"primary\" disabled={!input} type='submit' onClick={sendMessage}>\n              <SendIcon />\n            </IconButton>\n          </FormControl>\n        </form>\n    </div>\n  );\n}\n\nexport default App;\n",["28","29"],"C:\\Dev\\fastmessanger\\src\\Message.js",[],["30","31"],"C:\\Dev\\fastmessanger\\src\\firebase.js",[],"C:\\Dev\\fastmessanger\\src\\index.js",[],{"ruleId":"32","severity":1,"message":"33","line":6,"column":10,"nodeType":"34","messageId":"35","endLine":6,"endColumn":16},{"ruleId":"32","severity":1,"message":"36","line":9,"column":8,"nodeType":"34","messageId":"35","endLine":9,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":50,"column":7,"nodeType":"39","endLine":50,"endColumn":64},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["46"],"no-negated-in-lhs",["47"],["46"],["47"],"no-global-assign","no-unsafe-negation"]